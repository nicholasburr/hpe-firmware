#!/bin/bash

if ! [[ "$(id -u)" == "0" ]]
then
  echo "This container must run as root user"
  exit 1
fi

# SPP Firmware
{% if hpe_spp_firmware is defined %}
{% for item in hpe_spp_firmware %}
function upd{{ item.name }}() {
  if [[ $FORCE_UPDATE == true ]];then
    echo ""
    echo "###########################################"
    echo "FORCE Update {{ item.name }} firmware"
    echo "###########################################"
    echo ""
    /usr/lib/x86_64-linux-gnu/{{ item.rpm }}/hpsetup -f -s --tpmbypass
    cat /var/cpq/Component.log; rm -f /var/cpq/Component.log 
  else   
    echo ""
    echo "###########################################"
    echo "Update {{ item.name }} firmware"
    echo "###########################################"
    echo ""
    /usr/lib/x86_64-linux-gnu/{{ item.rpm }}/hpsetup -s --tpmbypass
    cat /var/cpq/Component.log; rm -f /var/cpq/Component.log
  fi
}
{% endfor %}
{% endif %}

{% if intel_firmware is defined %}
{% for item in intel_firmware %}
function upd{{ item.name }}() {
  echo ""
  echo "###########################################"
  echo "Update Intel {{ item.name }} firmware"
  echo "###########################################"
  echo "Note: this firmware installer runs unconditionally and takes no action if the firmware is already up-to-date."
  cd /opt/hpefwupdate/Linux_x64/
  /opt/hpefwupdate/Linux_x64/nvmupdate64e -u -l -c /opt/hpefwupdate/Linux_x64/nvmupdate.cfg
}
{% endfor %}
{% endif %}

{% if mellanox_firmware is defined %}
{% for item in mellanox_firmware %}
function upd{{ item.name }}() {
  echo ""
  echo "###########################################"
  echo "Update Mellanox {{ item.name }} firmware"
  echo "###########################################"
  echo "Note: this firmware installer runs unconditionally and takes no action if the firmware is already up-to-date."
  /usr/lib/x86_64-linux-gnu/firmware-nic-mellanox-641sfp28-private-16.35.3502-1.1/setup
}
{% endfor %}
{% endif %}

### MAIN ###
echo "Start firmware updates."
rm -f /var/cpq/Component.log
if [[ $COMPONENT == "ilo" ]];then
  updIlo
elif [[ $COMPONENT == "powerPIC" ]];then
  updPowerPIC
elif [[ $COMPONENT == "smartArray" ]];then
  updSmartArray
elif [[ $COMPONENT == "innovationEngine" ]];then
  updIE
elif [[ $COMPONENT == "sps" ]];then
  updSPS
elif [[ $COMPONENT == "bios" ]];then
  updBIOS
elif [[ $COMPONENT == "nic" ]];then
  updIntelNIC
  updBroadNIC
  updXXV710NIC
  updMLXC5
else
  updIlo
  updPowerPIC
  updSmartArray
  updIE
  updSPS
  updBIOS
  updIntelNIC
  updBroadNIC
  updXXV710NIC
  updMLXC5
fi
echo
echo "Done running firmware updates."
exit 0